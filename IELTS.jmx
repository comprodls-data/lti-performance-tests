<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="IELTS Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="IELTS" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - THOR" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="host_url" elementType="Argument">
              <stringProp name="Argument.name">host_url</stringProp>
              <stringProp name="Argument.value">${__P(host_url,lti-dev.comprodls.com)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="platformId" elementType="Argument">
              <stringProp name="Argument.name">platformId</stringProp>
              <stringProp name="Argument.value">92e3da11b8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="deploymentId" elementType="Argument">
              <stringProp name="Argument.name">deploymentId</stringProp>
              <stringProp name="Argument.value">7b39abb357</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="resLinkId" elementType="Argument">
              <stringProp name="Argument.name">resLinkId</stringProp>
              <stringProp name="Argument.value">${__P(resLinkId,ielts_pe__1594044177235__1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="targetLinkUri" elementType="Argument">
              <stringProp name="Argument.name">targetLinkUri</stringProp>
              <stringProp name="Argument.value">https://sandbox-api.cambridgeassessment.org.uk/metrica/v1/testplayer/redirect</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testId" elementType="Argument">
              <stringProp name="Argument.name">testId</stringProp>
              <stringProp name="Argument.value">IELTSi_T1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="referer" elementType="Argument">
              <stringProp name="Argument.name">referer</stringProp>
              <stringProp name="Argument.value"> https://micro-nemo.comprodls.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="response_type" elementType="Argument">
              <stringProp name="Argument.name">response_type</stringProp>
              <stringProp name="Argument.value">id_token</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="response_mode" elementType="Argument">
              <stringProp name="Argument.name">response_mode</stringProp>
              <stringProp name="Argument.value">form_post</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scope" elementType="Argument">
              <stringProp name="Argument.name">scope</stringProp>
              <stringProp name="Argument.value">openid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="lti_log" elementType="Argument">
              <stringProp name="Argument.name">lti_log</stringProp>
              <stringProp name="Argument.value">Submitted</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grant_type" elementType="Argument">
              <stringProp name="Argument.name">grant_type</stringProp>
              <stringProp name="Argument.value">client_credentials</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_assertion_type" elementType="Argument">
              <stringProp name="Argument.name">client_assertion_type</stringProp>
              <stringProp name="Argument.value">urn:ietf:params:oauth:client-assertion-type:jwt-bearer</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_assertion" elementType="Argument">
              <stringProp name="Argument.name">client_assertion</stringProp>
              <stringProp name="Argument.value">eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjJ3S1Y0cW1Fekk2R2xjY09NNmV4aVFfVXR3ZFk4VHFSNkM5bnlQZ2R6MEkifQ.eyJpc3MiOiJkMzk2NzJiOTc1Iiwic3ViIjoiZDM5NjcyYjk3NSIsImF1ZCI6Imh0dHBzOi8vbHRpLWRldi5jb21wcm9kbHMuY29tL3YxL2x0aS9wbGF0Zm9ybXMvOTJlM2RhMTFiOC9vYXV0aCIsImp0aSI6IjNhYmEzMmE0MTdiM2Q4YWE0OTkyMjQwMGU2YzIyMDg4IiwiaWF0IjoxNTk5NzIxMzE3LCJleHAiOjE1OTk4MDc3MTd9.XOiYiDAx3Wch2ma35rmDmT-aqR1w9eUqvdZHiK-z7aq63o9QqW8toj3MnOjFAoyrQZSQ1F3XEMU0JjG9F6ZRrixA9nL8fNWi7jozFqDK0BVRcUJe9WOY3IfcoQ3Xmbbysv3VF5HN6BYDFunp82rdcU971O8I2sd6_OYbqfonq4UdJboum5iZxwbUqrSwNsrTPyJi74CkZSTX9X3kzondgp2uwCjrSJMCsGDQEpYDRbl_ZLGzwsna2pgsVewCOc8GivUI8_mepkXsFeGjWdgZpQh6JftRmiYGHNCwW5I-4XLjEl7xMDIkYaXIEFnvDXCYX7dsUFAYYxuSg_ii3NbRfQ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scopeOauth" elementType="Argument">
              <stringProp name="Argument.name">scopeOauth</stringProp>
              <stringProp name="Argument.value">https://purl.imsglobal.org/spec/lti-ags/scope/score</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sharedOrgId" elementType="Argument">
              <stringProp name="Argument.name">sharedOrgId</stringProp>
              <stringProp name="Argument.value">sh_thor_cup1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scoreGiven" elementType="Argument">
              <stringProp name="Argument.name">scoreGiven</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scoreMaximum" elementType="Argument">
              <stringProp name="Argument.name">scoreMaximum</stringProp>
              <stringProp name="Argument.value">${__P(scoreMaximum,10)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="comment" elementType="Argument">
              <stringProp name="Argument.name">comment</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,Diagnostic Score)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activityProgress" elementType="Argument">
              <stringProp name="Argument.name">activityProgress</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,Completed)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradingProgress" elementType="Argument">
              <stringProp name="Argument.name">gradingProgress</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,FullyGraded)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - ALPHA" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="host_url" elementType="Argument">
              <stringProp name="Argument.name">host_url</stringProp>
              <stringProp name="Argument.value">${__P(host_url,lti-alpha.cambridgeone.org)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="platformId" elementType="Argument">
              <stringProp name="Argument.name">platformId</stringProp>
              <stringProp name="Argument.value">7caa930559</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="deploymentId" elementType="Argument">
              <stringProp name="Argument.name">deploymentId</stringProp>
              <stringProp name="Argument.value">2dca9c2258</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="resLinkId" elementType="Argument">
              <stringProp name="Argument.name">resLinkId</stringProp>
              <stringProp name="Argument.value">${__P(resLinkId,ielts_pe__1594044177235__1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="targetLinkUri" elementType="Argument">
              <stringProp name="Argument.name">targetLinkUri</stringProp>
              <stringProp name="Argument.value">https://cup-lti-tool.herokuapp.com/tools/7/lti/launch</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testId" elementType="Argument">
              <stringProp name="Argument.name">testId</stringProp>
              <stringProp name="Argument.value">IELTSi_T1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="referer" elementType="Argument">
              <stringProp name="Argument.name">referer</stringProp>
              <stringProp name="Argument.value">https://c1-alpha.cambridgeone.org</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="response_type" elementType="Argument">
              <stringProp name="Argument.name">response_type</stringProp>
              <stringProp name="Argument.value">id_token</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="response_mode" elementType="Argument">
              <stringProp name="Argument.name">response_mode</stringProp>
              <stringProp name="Argument.value">form_post</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scope" elementType="Argument">
              <stringProp name="Argument.name">scope</stringProp>
              <stringProp name="Argument.value">openid</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="lti_log" elementType="Argument">
              <stringProp name="Argument.name">lti_log</stringProp>
              <stringProp name="Argument.value">Submitted</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="grant_type" elementType="Argument">
              <stringProp name="Argument.name">grant_type</stringProp>
              <stringProp name="Argument.value">client_credentials</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_assertion_type" elementType="Argument">
              <stringProp name="Argument.name">client_assertion_type</stringProp>
              <stringProp name="Argument.value">urn:ietf:params:oauth:client-assertion-type:jwt-bearer</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="client_assertion" elementType="Argument">
              <stringProp name="Argument.name">client_assertion</stringProp>
              <stringProp name="Argument.value">eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjJ3S1Y0cW1Fekk2R2xjY09NNmV4aVFfVXR3ZFk4VHFSNkM5bnlQZ2R6MEkifQ.eyJpc3MiOiJkZTBmNjVhODZjIiwic3ViIjoiZGUwZjY1YTg2YyIsImF1ZCI6Imh0dHBzOi8vbHRpLWFscGhhLmNhbWJyaWRnZW9uZS5vcmcvdjEvbHRpL3BsYXRmb3Jtcy83Y2FhOTMwNTU5L29hdXRoIiwianRpIjoiZjIzNWJkM2M5MWEzY2Y2MzcyODVhZjkzZTM3ODM4OWYiLCJpYXQiOjE1OTk3MjYwMzUsImV4cCI6MTU5OTgxMjQzNX0.h0CyJb3_Tdu_4061lfz0lNVxvjzlhDSXVOmg04fJjJzYyBabZTMHeBXPlnvP9-5eQ6tEnQKdw5icRMMRaXdR5IKryeb28_7Bxs-Tp41fjn-HjurJzAJ0HTyNPYRBT3EMzHGonaq09ociqKId3W2B8OXD8dcUcrNxF6jeuQlPhyyNVHeSliUMNDhQ9DFYCSS5g-odePv44mXRX1Q7G70Eb_c417rmLcQlNs0B5rcMS95_dZsPt9yOVUHOupXD13xSn-x4wE-r7eJMWkA0xei0IHs3FsDfov7AA9SYEpDtG-70-dgGkhbr_Qasew2qMf5xKbfwLIuOzkCaMpj8-NfPQQ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scopeOauth" elementType="Argument">
              <stringProp name="Argument.name">scopeOauth</stringProp>
              <stringProp name="Argument.value">https://purl.imsglobal.org/spec/lti-ags/scope/score</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sharedOrgId" elementType="Argument">
              <stringProp name="Argument.name">sharedOrgId</stringProp>
              <stringProp name="Argument.value">sh_thor_cup1_1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scoreGiven" elementType="Argument">
              <stringProp name="Argument.name">scoreGiven</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,2)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="scoreMaximum" elementType="Argument">
              <stringProp name="Argument.name">scoreMaximum</stringProp>
              <stringProp name="Argument.value">${__P(scoreMaximum,10)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="comment" elementType="Argument">
              <stringProp name="Argument.name">comment</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,Diagnostic Score)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="activityProgress" elementType="Argument">
              <stringProp name="Argument.name">activityProgress</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,Completed)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="gradingProgress" elementType="Argument">
              <stringProp name="Argument.name">gradingProgress</stringProp>
              <stringProp name="Argument.value">${__P(scoreGiven,FullyGraded)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - THOR" enabled="false">
          <stringProp name="filename">usersIELTS.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">ext-user-id</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - ALPHA" enabled="false">
          <stringProp name="filename">usersIELTS_alpha.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">ext-user-id</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Student Launches IELTS Test" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>60.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Student Launches the Test" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Invoke Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">invoke.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="OIDC Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">oidc.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Keyset Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">keyset.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Student Launches and Submits IELTS Test" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>40.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Time Conversion from IST to UTC" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.*;
import java.time.format.*;

String UTCDateTime  = LocalDateTime.now(ZoneId.of(&quot;UTC-1&quot;)).toString();
vars.put(&apos;date&apos;, UTCDateTime);
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Student Launches the Test" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Invoke Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">invoke.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="OIDC Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">oidc.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Keyset Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">keyset.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Wait for Student to perform the Test" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
            <stringProp name="RandomTimer.range">0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Student Submits IELTS Test" enabled="true"/>
          <hashTree>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Returns Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">return.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Oauth Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">oauth.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Part Scores Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">part-scores.jmx</stringProp>
            </IncludeController>
            <hashTree/>
            <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Full Scores Launch Endpoint" enabled="true">
              <stringProp name="IncludeController.includepath">full-scores.jmx</stringProp>
            </IncludeController>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
